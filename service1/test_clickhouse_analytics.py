#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ClickHouse –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
"""

import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'service1_project.settings')
django.setup()

from accounts.clickhouse_analytics import clickhouse_logger

def test_clickhouse_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ ClickHouse"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ClickHouse –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    
    if not clickhouse_logger.client:
        print("‚ùå ClickHouse –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω!")
        return False
    
    print("‚úÖ ClickHouse –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    try:
        print("\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
        user_stats = clickhouse_logger.get_user_stats()
        for key, value in user_stats.items():
            print(f"  {key}: {value}")
        
        print("\nüìà –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:")
        recent_events = clickhouse_logger.get_recent_events(5)
        for event in recent_events:
            print(f"  {event}")
        
        print("\nüìÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –¥–Ω—è–º:")
        registration_stats = clickhouse_logger.get_registration_stats(7)
        for stat in registration_stats:
            print(f"  {stat}")
        
        print("\nüë• –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        unique_users_stats = clickhouse_logger.get_unique_users_stats()
        print(f"  –ü–æ –ª–æ–≥–∏–Ω—É: {unique_users_stats['unique_usernames']}")
        print(f"  –ü–æ email: {unique_users_stats['unique_emails']}")
            
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏: {e}")
        return False

if __name__ == "__main__":
    test_clickhouse_connection()